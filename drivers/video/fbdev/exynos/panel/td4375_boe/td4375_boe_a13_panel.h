/*
 * linux/drivers/video/fbdev/exynos/panel/td4375_boe/td4375_boe_a13_panel.h
 *
 * Header file for TD4375 Dimming Driver
 *
 * Copyright (c) 2016 Samsung Electronics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __TD4375_A13_PANEL_H__
#define __TD4375_A13_PANEL_H__
#include "../panel_drv.h"
#include "td4375_boe.h"

#include "td4375_boe_a13_panel_dimming.h"
#include "td4375_boe_a13_panel_i2c.h"

#include "td4375_boe_a13_resol.h"

#undef __pn_name__
#define __pn_name__	a13

#undef __PN_NAME__
#define __PN_NAME__	A13

static struct seqinfo a13_seqtbl[MAX_PANEL_SEQ];


/* ===================================================================================== */
/* ============================= [TD4375 READ INFO TABLE] ============================= */
/* ===================================================================================== */
/* <READINFO TABLE> IS DEPENDENT ON LDI. IF YOU NEED, DEFINE PANEL's RESOURCE TABLE */


/* ===================================================================================== */
/* ============================= [TD4375 RESOURCE TABLE] ============================== */
/* ===================================================================================== */
/* <RESOURCE TABLE> IS DEPENDENT ON LDI. IF YOU NEED, DEFINE PANEL's RESOURCE TABLE */


/* ===================================================================================== */
/* ============================== [TD4375 MAPPING TABLE] ============================== */
/* ===================================================================================== */

static u8 a13_brt_table[TD4375_TOTAL_NR_LUMINANCE][1] = {
	{0},
	{2}, {2}, {3}, {3}, {4}, {4}, {5}, {5}, {6}, {6},	/* 1: 2 */
	{7}, {7}, {8}, {8}, {9}, {9}, {10}, {10}, {11}, {11},
	{12}, {12}, {13}, {13}, {14}, {14}, {15}, {15}, {16}, {16},
	{17}, {17}, {18}, {18}, {19}, {20}, {20}, {21}, {21}, {22},
	{23}, {23}, {24}, {24}, {25}, {26}, {26}, {27}, {27}, {28},
	{29}, {29}, {30}, {30}, {31}, {32}, {32}, {33}, {33}, {34},
	{35}, {35}, {36}, {36}, {37}, {38}, {38}, {39}, {39}, {40},
	{41}, {41}, {42}, {42}, {43}, {44}, {44}, {45}, {45}, {46},
	{47}, {48}, {48}, {49}, {50}, {51}, {52}, {52}, {53}, {54},
	{55}, {56}, {56}, {57}, {58}, {59}, {59}, {60}, {61}, {62},
	{63}, {63}, {64}, {65}, {66}, {67}, {67}, {68}, {69}, {70},
	{71}, {71}, {72}, {73}, {74}, {75}, {75}, {76}, {77}, {78},
	{78}, {79}, {80}, {81}, {82}, {82}, {83}, {84}, {85}, {86},	/* 128: 84 */
	{87}, {88}, {89}, {90}, {91}, {92}, {93}, {94}, {95}, {96},
	{97}, {98}, {99}, {100}, {101}, {102}, {103}, {104}, {105}, {106},
	{107}, {108}, {109}, {110}, {111}, {112}, {113}, {114}, {115}, {117},
	{118}, {119}, {120}, {121}, {122}, {123}, {124}, {125}, {126}, {127},
	{128}, {129}, {130}, {131}, {132}, {133}, {134}, {135}, {136}, {137},
	{138}, {139}, {140}, {141}, {142}, {143}, {144}, {145}, {146}, {147},
	{148}, {149}, {150}, {151}, {152}, {153}, {154}, {155}, {156}, {157},
	{158}, {159}, {160}, {161}, {162}, {163}, {164}, {165}, {166}, {167},
	{168}, {169}, {170}, {171}, {172}, {173}, {174}, {175}, {176}, {177},
	{178}, {179}, {180}, {182}, {183}, {184}, {185}, {186}, {187}, {188},
	{189}, {190}, {191}, {192}, {193}, {194}, {195}, {196}, {197}, {198},
	{199}, {200}, {201}, {202}, {203}, {204}, {205}, {206}, {207}, {208},
	{209}, {210}, {211}, {212}, {213}, {213}, {213}, {213}, {213}, {213}, /* 255: 213 */
	{213}, {213}, {213}, {213}, {213}, {213}, {213}, {213}, {213}, {213},
	{213}, {213}, {213}, {213}, {213}, {213}, {213}, {213}, {213}, {213},
	{213}, {213}, {213}, {213}, {213}, {213}, {213}, {213}, {213}, {213},
	{213}, {213}, {213}, {213}, {213}, {213}, {213}, {213}, {213}, {213},
	{213}, {213}, {213}, {213}, {213}, {255},
};


static struct maptbl a13_maptbl[MAX_MAPTBL] = {
	[BRT_MAPTBL] = DEFINE_2D_MAPTBL(a13_brt_table, init_brightness_table, getidx_brt_table, copy_common_maptbl),
};

/* ===================================================================================== */
/* ============================== [TD4375 COMMAND TABLE] ============================== */
/* ===================================================================================== */
static u8 A13_SLEEP_OUT[] = { 0x11 };
static u8 A13_SLEEP_IN[] = { 0x10 };
static u8 A13_DISPLAY_OFF[] = { 0x28 };
static u8 A13_DISPLAY_ON[] = { 0x29 };

static u8 A13_BRIGHTNESS[] = {
	0x51,
	0xFF,
};

static u8 A13_BRIGHTNESS_MODE[] = {
	0x53,
	0x24,
};

static u8 A13_TD4375_001[] = {
	0xB0,
	0x04,
};

static u8 A13_TD4375_002[] = {
	0xB6,
	0x30, 0x6B, 0x00, 0x86, 0x03, 0x0A, 0x13, 0x1A, 0x00, 0x00,
};

static u8 A13_TD4375_003[] = {
	0xB7,
	0x51, 0x00, 0x00, 0x00,
};

static u8 A13_TD4375_004[] = {
	0xB8,
	0x57, 0x3D, 0x19, 0xBE, 0x1E, 0x0A, 0x0A,
};

static u8 A13_TD4375_005[] = {
	0xB9,
	0x6F, 0x3D, 0x28, 0xBE, 0x3C, 0x14, 0x0A,
};

static u8 A13_TD4375_006[] = {
	0xBA,
	0x23, 0x57, 0x00, 0x00, 0x00, 0x00, 0x0A,
};

static u8 A13_TD4375_007[] = {
	0xBB,
	0x44, 0x26, 0xC3, 0x1F, 0x19, 0x06, 0x03, 0xC0, 0x00, 0x00,
	0x10,
};

static u8 A13_TD4375_008[] = {
	0xBC,
	0x32, 0x4C, 0xC3, 0x52, 0x32, 0x1F, 0x03, 0xF2, 0x00, 0x00,
	0x13,
};

static u8 A13_TD4375_009[] = {
	0xBD,
	0x24, 0x68, 0xC3, 0xAA, 0x3F, 0x32, 0x03, 0xFF, 0x00, 0x00,
	0x25,
};

static u8 A13_TD4375_010[] = {
	0xBE,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00,
};

static u8 A13_TD4375_011[] = {
	0xC0,
	0x00, 0xD0, 0x01, 0x2C, 0x0A, 0x09, 0x68, 0x00, 0x0C, 0x22,
	0x00, 0x08, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x02,
};

static u8 A13_TD4375_012[] = {
	0xC1,
	0x30, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00,
	0x05, 0x20, 0x00, 0x80, 0xFA, 0x40, 0x00, 0x84, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x2C, 0x08, 0x08, 0x00, 0x0A, 0x28, 0x0F, 0x3C,
	0x14, 0x50,
};

static u8 A13_TD4375_013[] = {
	0xC2,
	0x00, 0x30, 0xC7, 0x02, 0x02, 0x10, 0x03, 0x05, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xC5,
	0x04, 0x04, 0x01, 0x01, 0xC1, 0x00, 0xA0, 0x0A, 0x00, 0x00,
	0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0xA0, 0x0A,
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00,
};

static u8 A13_TD4375_014[] = {
	0xC3,
	0x00, 0x00, 0xC1, 0x01, 0x97, 0xC9, 0xA2, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xCE, 0x01, 0x00, 0x0A, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0xC0,
	0x00, 0x0A, 0x00, 0xD0, 0x00, 0x00, 0x01, 0x00, 0x00, 0xC0,
	0x00, 0x0A, 0x00, 0xD0, 0x00, 0x00, 0x01, 0x00, 0x00, 0xC0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static u8 A13_TD4375_015[] = {
	0xC4,
	0x00, 0x00, 0x45, 0x45, 0x4D, 0x4D, 0x61, 0x5F, 0x5D, 0x61,
	0x5F, 0x5D, 0x53, 0x0F, 0x0E, 0x11, 0x10, 0x44, 0x4F, 0x4F,
	0xBF, 0xBE, 0x03, 0x02, 0x00, 0x00, 0x45, 0x45, 0x4D, 0x4D,
	0x61, 0x5F, 0x5D, 0x61, 0x5F, 0x5D, 0x53, 0x0F, 0x0E, 0x11,
	0x10, 0x44, 0x4F, 0x4F, 0xBF, 0xBE, 0x03, 0x02, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xC3, 0xFD, 0xFF, 0xC3,
	0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0xC0, 0x0F, 0x00, 0xC0,
	0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58,
	0x55, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static u8 A13_TD4375_016[] = {
	0xC5,
	0x08, 0x00, 0x00, 0x00, 0x00,
};

static u8 A13_TD4375_017[] = {
	0xC6,
	0x02, 0x0A, 0x08, 0xFC, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x13,
	0x01, 0xAF, 0x00, 0x01, 0x00, 0x43, 0x3D, 0x3C, 0x00, 0x00,
	0x00, 0x34, 0x05, 0x09, 0x28, 0x28, 0x03, 0x00, 0x43, 0x3D,
	0x3C, 0x01, 0x0B, 0x00, 0x00, 0x00, 0x1E, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x12, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x00,
};

static u8 A13_TD4375_018[] = {
	0xC7,
	0x00, 0x00, 0x00, 0xA2, 0x01, 0x01, 0x01, 0x28, 0x01, 0x41,
	0x01, 0x4C, 0x01, 0x5A, 0x01, 0x59, 0x01, 0x73, 0x01, 0x43,
	0x01, 0x97, 0x01, 0x59, 0x01, 0x9C, 0x01, 0x56, 0x01, 0xBF,
	0x01, 0xBF, 0x02, 0x41, 0x02, 0xA4, 0x02, 0xAD, 0x00, 0x00,
	0x00, 0xA2, 0x01, 0x01, 0x01, 0x28, 0x01, 0x41, 0x01, 0x4C,
	0x01, 0x5A, 0x01, 0x59, 0x01, 0x73, 0x01, 0x43, 0x01, 0x97,
	0x01, 0x59, 0x01, 0x9C, 0x01, 0x56, 0x01, 0xBF, 0x01, 0xBF,
	0x02, 0x41, 0x02, 0xA4, 0x02, 0xAD,
};

static u8 A13_TD4375_019[] = {
	0xCB,
	0x20, 0x80, 0x70, 0x00, 0x20, 0x00, 0x00, 0x2D, 0x41, 0x00,
	0x00, 0x00, 0x00, 0xFF,
};

static u8 A13_TD4375_020[] = {
	0xCD,
	0x00,
};

static u8 A13_TD4375_021[] = {
	0xCE,
	0x7D, 0x40, 0x49, 0x53, 0x59, 0x5E, 0x63, 0x68, 0x6E, 0x74,
	0x7E, 0x8A, 0x98, 0xA8, 0xBB, 0xD0, 0xE7, 0xFF, 0x31, 0x5F,
	0x00, 0x00, 0x45, 0x00, 0x69, 0x5A, 0x40, 0x11, 0xF4, 0x00,
	0x00, 0x04, 0xFA, 0x00, 0x00,
};

static u8 A13_TD4375_022[] = {
	0xCF,
	0x00, 0x00, 0x80, 0x46, 0x61, 0x00,
};

static u8 A13_TD4375_023[] = {
	0xD0,
	0xCC, 0x14, 0xD5, 0x66, 0x09, 0xB0, 0x00, 0xCF, 0xEF, 0xE5,
	0xD4, 0x0B, 0x52, 0xFE, 0x09, 0x09, 0xCF, 0x00,
};

static u8 A13_TD4375_024[] = {
	0xD1,
	0xD3, 0xD3, 0x1B, 0xB0, 0x07, 0x07, 0x3B, 0x11, 0x31, 0x33,
	0x31, 0x05, 0x33, 0x7B, 0x07, 0x33, 0x3B, 0x78, 0xD2, 0xD2,
	0x06, 0x96, 0x13, 0x93, 0x22, 0x22, 0x22, 0xB3, 0xBB, 0x80,
	0x00, 0xBB, 0xBB, 0x11, 0x08, 0x08, 0x84, 0xC0, 0x09, 0x77,
	0xFF, 0x11, 0x44,
};

static u8 A13_TD4375_025[] = {
	0xD2,
	0x00, 0x00,
};

static u8 A13_TD4375_026[] = {
	0xD4,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00,
};

static u8 A13_TD4375_027[] = {
	0xD7,
	0x21, 0x10, 0x52, 0x52, 0x00, 0xD0, 0x00, 0x0C, 0x00, 0xD0,
	0x04, 0xFD, 0x01, 0x00, 0x03, 0x03, 0x05, 0x05, 0x00, 0x03,
	0x04, 0x05, 0x00, 0x04, 0x03, 0x08, 0x02, 0x08, 0x06, 0x03,
	0x08, 0x04, 0x08, 0x10, 0x0C, 0x0B, 0x0A, 0x0A, 0x0A, 0x07,
	0x08, 0x0A, 0x06, 0x00, 0x08, 0x00, 0x04, 0x05, 0x09, 0x00,
	0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x04, 0x04,
	0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x06, 0x06,
	0x05, 0x05, 0x05, 0x00,
};

static u8 A13_TD4375_028[] = {
	0xD8,
	0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00,
};

static u8 A13_TD4375_029[] = {
	0xD9,
	0x40, 0x97, 0x26, 0xED, 0x0E, 0xBA, 0x16, 0x6C, 0x16, 0x6C,
	0x00, 0x30, 0x00, 0x14, 0x00, 0x14, 0x00, 0x0C, 0x00, 0x00,
	0x01, 0x00,
};

static u8 A13_TD4375_030[] = {
	0xDD,
	0x30, 0x06, 0x23, 0x65,
};

static u8 A13_TD4375_031[] = {
	0xDE,
	0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x10,
};

static u8 A13_TD4375_032[] = {
	0xE6,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static u8 A13_TD4375_033[] = {
	0xE7,
	0x11, 0x00, 0x89, 0x30, 0x80, 0x09, 0x68, 0x04, 0x38, 0x00,
	0x08, 0x02, 0x1C, 0x02, 0x1C, 0x02, 0x00, 0x02, 0x0E, 0x20,
	0x00, 0xBB, 0x00, 0x07, 0x0C, 0x0D, 0xB7, 0x0C, 0xB7, 0x18,
	0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00, 0x06, 0x0B, 0x0B,
	0x33, 0x0E, 0x1C, 0x2A, 0x38, 0x46, 0x54, 0x62, 0x69, 0x70,
	0x77, 0x79, 0x7B, 0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09,
	0x40, 0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8, 0x1A,
	0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6, 0x2B, 0x34, 0x2B,
	0x74, 0x3B, 0x74, 0x6B, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x20, 0x00, 0x06, 0x0F,
	0x0F, 0x33, 0x0E, 0x1C, 0x2A, 0x38, 0x46, 0x54, 0x62, 0x69,
	0x70, 0x77, 0x79, 0x7B, 0x7D, 0x7E, 0x01, 0xC2, 0x22, 0x00,
	0x2A, 0x40, 0x2A, 0xBE, 0x3A, 0xFC, 0x3A, 0xFA, 0x3A, 0xF8,
	0x3B, 0x38, 0x3B, 0x78, 0x3B, 0x76, 0x4B, 0xB6, 0x4B, 0xB6,
	0x4B, 0xF4, 0x63, 0xF4, 0x7C, 0x34, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00,
};

static u8 A13_TD4375_034[] = {
	0xE8,
	0x00, 0x30, 0x63, 0x00,
};

static u8 A13_TD4375_035[] = {
	0xEA,
	0x01, 0x0E, 0x09, 0x60, 0x0A, 0x80, 0x00, 0x00, 0x09, 0x00,
	0x01, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x04, 0xC2, 0x00, 0x12, 0x00, 0xD0, 0x0D, 0x00, 0x86, 0x00,
};

static u8 A13_TD4375_036[] = {
	0xEB,
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11,
};

static u8 A13_TD4375_037[] = {
	0xEC,
	0x05, 0xF0, 0x00, 0x10, 0x9F, 0x0A, 0x80, 0x00, 0x02, 0x3A,
};

static u8 A13_TD4375_038[] = {
	0xED,
	0x01, 0x01, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x4A,
	0x00, 0x00, 0x00, 0x50, 0x00, 0x01, 0x4A, 0x00, 0x00, 0xA0,
	0x10, 0x00,
};

static u8 A13_TD4375_039[] = {
	0xEE,
	0x01, 0x17, 0x00, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x00,
	0x00, 0xF2, 0x43, 0x5D, 0xC0, 0x05, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x43, 0x0D, 0x70, 0x01, 0x10, 0x09,
	0x09, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static u8 A13_TD4375_040[] = {
	0xEF,
	0x00, 0x70, 0x42, 0x07, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x2F,
	0x2F, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x70, 0x42, 0x07, 0xD0, 0x2F, 0x2F, 0x2F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x08,
	0x10, 0x00, 0x10, 0x00, 0x0A, 0x06, 0x40, 0x00, 0x00, 0x00,
	0x00, 0x4B, 0x00, 0x03, 0x51, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00,
};

static u8 A13_TD4375_041[] = {
	0xF1,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00,
};

static u8 A13_TD4375_042[] = {
	0xF9,
	0x44, 0x3F, 0x00, 0x8D, 0xBF, 0x00, 0x09, 0x1D,
};

static u8 A13_TD4375_043[] = {
	0xB0,
	0x03,
};

static u8 A13_TD4375_044[] = {
	0x53,
	0x0C,
};

static u8 A13_TD4375_045[] = {
	0x55,
	0x03,
};

static u8 A13_TD4375_046[] = {
	0x5E,
	0x30,
};

static DEFINE_STATIC_PACKET(a13_sleep_out, DSI_PKT_TYPE_WR, A13_SLEEP_OUT, 0);
static DEFINE_STATIC_PACKET(a13_sleep_in, DSI_PKT_TYPE_WR, A13_SLEEP_IN, 0);
static DEFINE_STATIC_PACKET(a13_display_on, DSI_PKT_TYPE_WR, A13_DISPLAY_ON, 0);
static DEFINE_STATIC_PACKET(a13_display_off, DSI_PKT_TYPE_WR, A13_DISPLAY_OFF, 0);
static DEFINE_STATIC_PACKET(a13_brightness_mode, DSI_PKT_TYPE_WR, A13_BRIGHTNESS_MODE, 0);

static DEFINE_PKTUI(a13_brightness, &a13_maptbl[BRT_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(a13_brightness, DSI_PKT_TYPE_WR, A13_BRIGHTNESS, 0);

static DEFINE_STATIC_PACKET(a13_td4375_boe_001, DSI_PKT_TYPE_WR, A13_TD4375_001, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_002, DSI_PKT_TYPE_WR, A13_TD4375_002, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_003, DSI_PKT_TYPE_WR, A13_TD4375_003, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_004, DSI_PKT_TYPE_WR, A13_TD4375_004, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_005, DSI_PKT_TYPE_WR, A13_TD4375_005, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_006, DSI_PKT_TYPE_WR, A13_TD4375_006, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_007, DSI_PKT_TYPE_WR, A13_TD4375_007, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_008, DSI_PKT_TYPE_WR, A13_TD4375_008, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_009, DSI_PKT_TYPE_WR, A13_TD4375_009, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_010, DSI_PKT_TYPE_WR, A13_TD4375_010, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_011, DSI_PKT_TYPE_WR, A13_TD4375_011, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_012, DSI_PKT_TYPE_WR, A13_TD4375_012, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_013, DSI_PKT_TYPE_WR, A13_TD4375_013, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_014, DSI_PKT_TYPE_WR, A13_TD4375_014, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_015, DSI_PKT_TYPE_WR, A13_TD4375_015, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_016, DSI_PKT_TYPE_WR, A13_TD4375_016, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_017, DSI_PKT_TYPE_WR, A13_TD4375_017, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_018, DSI_PKT_TYPE_WR, A13_TD4375_018, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_019, DSI_PKT_TYPE_WR, A13_TD4375_019, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_020, DSI_PKT_TYPE_WR, A13_TD4375_020, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_021, DSI_PKT_TYPE_WR, A13_TD4375_021, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_022, DSI_PKT_TYPE_WR, A13_TD4375_022, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_023, DSI_PKT_TYPE_WR, A13_TD4375_023, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_024, DSI_PKT_TYPE_WR, A13_TD4375_024, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_025, DSI_PKT_TYPE_WR, A13_TD4375_025, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_026, DSI_PKT_TYPE_WR, A13_TD4375_026, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_027, DSI_PKT_TYPE_WR, A13_TD4375_027, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_028, DSI_PKT_TYPE_WR, A13_TD4375_028, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_029, DSI_PKT_TYPE_WR, A13_TD4375_029, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_030, DSI_PKT_TYPE_WR, A13_TD4375_030, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_031, DSI_PKT_TYPE_WR, A13_TD4375_031, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_032, DSI_PKT_TYPE_WR, A13_TD4375_032, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_033, DSI_PKT_TYPE_WR, A13_TD4375_033, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_034, DSI_PKT_TYPE_WR, A13_TD4375_034, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_035, DSI_PKT_TYPE_WR, A13_TD4375_035, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_036, DSI_PKT_TYPE_WR, A13_TD4375_036, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_037, DSI_PKT_TYPE_WR, A13_TD4375_037, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_038, DSI_PKT_TYPE_WR, A13_TD4375_038, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_039, DSI_PKT_TYPE_WR, A13_TD4375_039, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_040, DSI_PKT_TYPE_WR, A13_TD4375_040, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_041, DSI_PKT_TYPE_WR, A13_TD4375_041, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_042, DSI_PKT_TYPE_WR, A13_TD4375_042, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_043, DSI_PKT_TYPE_WR, A13_TD4375_043, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_044, DSI_PKT_TYPE_WR, A13_TD4375_044, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_045, DSI_PKT_TYPE_WR, A13_TD4375_045, 0);
static DEFINE_STATIC_PACKET(a13_td4375_boe_046, DSI_PKT_TYPE_WR, A13_TD4375_046, 0);

static DEFINE_PANEL_MDELAY(a13_wait_sleep_in, 4 * 17); /* 4 frame */
static DEFINE_PANEL_MDELAY(a13_wait_2msec, 2);
static DEFINE_PANEL_MDELAY(a13_wait_20msec, 20);
static DEFINE_PANEL_MDELAY(a13_wait_120msec, 120);
static DEFINE_PANEL_MDELAY(a13_wait_blic_off, 1);


static void *a13_init_cmdtbl[] = {
	&td4375_boe_restbl[RES_ID],
	&PKTINFO(a13_td4375_boe_001),
	&PKTINFO(a13_td4375_boe_002),
	&PKTINFO(a13_td4375_boe_003),
	&PKTINFO(a13_td4375_boe_004),
	&PKTINFO(a13_td4375_boe_005),
	&PKTINFO(a13_td4375_boe_006),
	&PKTINFO(a13_td4375_boe_007),
	&PKTINFO(a13_td4375_boe_008),
	&PKTINFO(a13_td4375_boe_009),
	&PKTINFO(a13_td4375_boe_010),
	&PKTINFO(a13_td4375_boe_011),
	&PKTINFO(a13_td4375_boe_012),
	&PKTINFO(a13_td4375_boe_013),
	&PKTINFO(a13_td4375_boe_014),
	&PKTINFO(a13_td4375_boe_015),
	&PKTINFO(a13_td4375_boe_016),
	&PKTINFO(a13_td4375_boe_017),
	&PKTINFO(a13_td4375_boe_018),
	&PKTINFO(a13_td4375_boe_019),
	&PKTINFO(a13_td4375_boe_020),
	&PKTINFO(a13_td4375_boe_021),
	&PKTINFO(a13_td4375_boe_022),
	&PKTINFO(a13_td4375_boe_023),
	&PKTINFO(a13_td4375_boe_024),
	&PKTINFO(a13_td4375_boe_025),
	&PKTINFO(a13_td4375_boe_026),
	&PKTINFO(a13_td4375_boe_027),
	&PKTINFO(a13_td4375_boe_028),
	&PKTINFO(a13_td4375_boe_029),
	&PKTINFO(a13_td4375_boe_030),
	&PKTINFO(a13_td4375_boe_031),
	&PKTINFO(a13_td4375_boe_032),
	&PKTINFO(a13_td4375_boe_033),
	&PKTINFO(a13_td4375_boe_034),
	&PKTINFO(a13_td4375_boe_035),
	&PKTINFO(a13_td4375_boe_036),
	&PKTINFO(a13_td4375_boe_037),
	&PKTINFO(a13_td4375_boe_038),
	&PKTINFO(a13_td4375_boe_039),
	&PKTINFO(a13_td4375_boe_040),
	&PKTINFO(a13_td4375_boe_041),
	&PKTINFO(a13_td4375_boe_042),
	&PKTINFO(a13_td4375_boe_043),
	&PKTINFO(a13_td4375_boe_044),
	&PKTINFO(a13_td4375_boe_045),
	&PKTINFO(a13_td4375_boe_046),
	&PKTINFO(a13_sleep_out),
	&DLYINFO(a13_wait_120msec),
};

static void *a13_res_init_cmdtbl[] = {
	&td4375_boe_restbl[RES_ID],
};

static void *a13_set_bl_cmdtbl[] = {
	&PKTINFO(a13_brightness), //51h
};

static void *a13_display_on_cmdtbl[] = {
	&PKTINFO(a13_display_on),
	&DLYINFO(a13_wait_20msec),
	&PKTINFO(a13_brightness_mode),
};

static void *a13_display_off_cmdtbl[] = {
	&PKTINFO(a13_display_off),
};

static void *a13_exit_cmdtbl[] = {
	&PKTINFO(a13_sleep_in),
};

/* ===================================================================================== */
/* ================================= [EA8076 I2C TABLE] ===========+++================= */
/* ===================================================================================== */
static u8 TD4375_A13_I2C_INIT[] = {
	0x0C, 0x24,
	0x0D, 0x1E,
	0x0E, 0x1E,
	0x09, 0x99,
	0x02, 0x6B,
	0x03, 0x0D,
	0x11, 0x74,
	0x04, 0x03,
	0x05, 0xC2,
	0x10, 0x66,
	0x08, 0x13,
};

static u8 TD4375_A13_I2C_EXIT_VSN[] = {
	0x09, 0x9C,
};

static u8 TD4375_A13_I2C_EXIT_VSP[] = {
	0x09, 0x18,
};

static u8 TD4375_A13_I2C_EXIT_BLEN[] = {
	0x08, 0x00,
};

static u8 TD4375_A13_I2C_DUMP[] = {
	0x00, 0x00,
	0x00, 0x00,
	0x00, 0x00,
	0x00, 0x00,
	0x00, 0x00,
	0x00, 0x00,
	0x00, 0x00,
	0x00, 0x00,
	0x00, 0x00,
	0x00, 0x00,
	0x00, 0x00,
};

static DEFINE_STATIC_PACKET(td4375_boe_a13_i2c_init, I2C_PKT_TYPE_WR, TD4375_A13_I2C_INIT, 0);
static DEFINE_STATIC_PACKET(td4375_boe_a13_i2c_exit_vsn, I2C_PKT_TYPE_WR, TD4375_A13_I2C_EXIT_VSN, 0);
static DEFINE_STATIC_PACKET(td4375_boe_a13_i2c_exit_vsp, I2C_PKT_TYPE_WR, TD4375_A13_I2C_EXIT_VSP, 0);
static DEFINE_STATIC_PACKET(td4375_boe_a13_i2c_exit_blen, I2C_PKT_TYPE_WR, TD4375_A13_I2C_EXIT_BLEN, 0);
static DEFINE_STATIC_PACKET(td4375_boe_a13_i2c_dump, I2C_PKT_TYPE_RD, TD4375_A13_I2C_DUMP, 0);

static void *td4375_boe_a13_init_cmdtbl[] = {
	&PKTINFO(td4375_boe_a13_i2c_init),
};

static void *td4375_boe_a13_exit_cmdtbl[] = {
	&PKTINFO(td4375_boe_a13_i2c_exit_vsn),
	&DLYINFO(a13_wait_blic_off),
	&PKTINFO(td4375_boe_a13_i2c_exit_vsp),
	&DLYINFO(a13_wait_blic_off),	
	&PKTINFO(td4375_boe_a13_i2c_exit_blen),
};

static void *td4375_boe_a13_dump_cmdtbl[] = {
	&PKTINFO(td4375_boe_a13_i2c_dump),
};


static struct seqinfo a13_seqtbl[MAX_PANEL_SEQ] = {
	[PANEL_INIT_SEQ] = SEQINFO_INIT("init-seq", a13_init_cmdtbl),
	[PANEL_RES_INIT_SEQ] = SEQINFO_INIT("resource-init-seq", a13_res_init_cmdtbl),
	[PANEL_SET_BL_SEQ] = SEQINFO_INIT("set-bl-seq", a13_set_bl_cmdtbl),
	[PANEL_DISPLAY_ON_SEQ] = SEQINFO_INIT("display-on-seq", a13_display_on_cmdtbl),
	[PANEL_DISPLAY_OFF_SEQ] = SEQINFO_INIT("display-off-seq", a13_display_off_cmdtbl),
	[PANEL_EXIT_SEQ] = SEQINFO_INIT("exit-seq", a13_exit_cmdtbl),
#ifdef CONFIG_SUPPORT_I2C
	[PANEL_I2C_INIT_SEQ] = SEQINFO_INIT("i2c-init-seq", td4375_boe_a13_init_cmdtbl),
	[PANEL_I2C_EXIT_SEQ] = SEQINFO_INIT("i2c-exit-seq", td4375_boe_a13_exit_cmdtbl),
	[PANEL_I2C_DUMP_SEQ] = SEQINFO_INIT("i2c-dump-seq", td4375_boe_a13_dump_cmdtbl),
#endif
};

struct common_panel_info td4375_boe_a13_default_panel_info = {
	.ldi_name = "td4375_boe",
	.name = "td4375_boe_a13_default",
	.model = "BOE_6_517_inch",
	.vendor = "BOE",
	.id = 0x4B6220,
	.rev = 0,
	.ddi_props = {
		.gpara = 0,
		.err_fg_recovery = false,
		.init_seq_by_lpdt = true,
	},
	.mres = {
		.nr_resol = ARRAY_SIZE(td4375_boe_a13_resol),
		.resol = td4375_boe_a13_resol,
	},
	.maptbl = a13_maptbl,
	.nr_maptbl = ARRAY_SIZE(a13_maptbl),
	.seqtbl = a13_seqtbl,
	.nr_seqtbl = ARRAY_SIZE(a13_seqtbl),
	.rditbl = td4375_boe_rditbl,
	.nr_rditbl = ARRAY_SIZE(td4375_boe_rditbl),
	.restbl = td4375_boe_restbl,
	.nr_restbl = ARRAY_SIZE(td4375_boe_restbl),
	.dumpinfo = NULL,
	.nr_dumpinfo = 0,
	.panel_dim_info = {
		&td4375_boe_a13_panel_dimming_info,
	},
	.i2c_data = &td4375_boe_a13_i2c_data,
};

static int __init td4375_boe_a13_panel_init(void)
{
	register_common_panel(&td4375_boe_a13_default_panel_info);

	return 0;
}
arch_initcall(td4375_boe_a13_panel_init)
#endif /* __TD4375_A13_PANEL_H__ */
