#ifndef IS_OTPROM_FRONT_GC08A3_V001_H
#define IS_OTPROM_FRONT_GC08A3_V001_H

/*
 * Reference File
 * 20210929_A13LTE_CAM1(Front_8M_GC08A3)_OTP_Front_Cal map V008.001_QC_LSI_MTK_Map.xlsx
 */

/*********GC08A3 OTP*********/
#define GC08A3_OTP_ACCESS_ADDR_HIGH                             0xA69
#define GC08A3_OTP_ACCESS_ADDR_LOW                              0xA6A
#define GC08A3_OTP_READ_ADDR                                    0xA6C
#define GC08A3_OTP_MODE_SEL_ADDR                                0x313
#define GC08A3_READ_MODE                                        (1<<5)

#define GC08A3_BANK_SELECT_ADDR                                 0x15A0
#define GC08A3_OTP_START_ADDR_BANK1                             0x15C0
#define GC08A3_OTP_START_ADDR_BANK2                             0x38E0
#define GC08A3_OTP_START_ADDR_BANK3                             0x5C00
#define GC08A3_OTP_START_ADDR_BANK4                             0x7F20
#define GC08A3_OTP_START_ADDR_BANK5                             0xA240

#define GC08A3_OTP_USED_CAL_SIZE                                ((0x38BF - 0x15C0 + 0x1)/8)
#define IS_FRONT_MAX_CAL_SIZE                                   (16*1024)
#define GC08A3_FRONT_HEADER_CHECKSUM_LEN                        ((0x180F - 0x15C0 + 0x1)/8)

#define FRONT_STANDARD_CAL_CHECKSUM_LEN                         ((0x389F - 0x1830 + 0x1) / 8)
#define FRONT_AWB_SEC2LSI_CHECKSUM_LEN                          ((0x133F - 0x12E0 + 0x1) / 8)
#define FRONT_SHADING_SEC2LSI_CHECKSUM_LEN                      ((0xE2BF - 0x1360 + 0x1) / 8)

struct rom_standard_cal_data front_gc08a3_standard_cal_info = {
	.rom_standard_cal_start_addr               = 0x4E,
	.rom_standard_cal_end_addr                 = 0x45F,
	.rom_standard_cal_module_crc_addr          = 0x45C,
	.rom_standard_cal_module_checksum_len      = FRONT_STANDARD_CAL_CHECKSUM_LEN,
	.rom_header_standard_cal_end_addr          = 0x04,
	.rom_standard_cal_sec2lsi_end_addr         = 0xE2DF,

	// reference data only
	.rom_awb_start_addr                        = 0x58,
	.rom_awb_end_addr                          = 0x5F,
	.rom_shading_start_addr                    = 0x62,
	.rom_shading_end_addr                      = 0x45A,

	.rom_awb_sec2lsi_start_addr                = 0x58,
	.rom_awb_sec2lsi_end_addr                  = 0x5F,
	.rom_awb_sec2lsi_checksum_addr             = 0x64,
	.rom_awb_sec2lsi_checksum_len              = FRONT_AWB_SEC2LSI_CHECKSUM_LEN,

	.rom_shading_sec2lsi_start_addr            = 0x68,
	.rom_shading_sec2lsi_end_addr              = 0x1A4F,
	.rom_shading_sec2lsi_checksum_addr         = 0x1A54,
	.rom_shading_sec2lsi_checksum_len          = FRONT_SHADING_SEC2LSI_CHECKSUM_LEN,
};

const struct rom_extend_cal_addr front_gc08a3_extend_cal_addr = {
	.name = EXTEND_STANDARD_CAL,
	.data = &front_gc08a3_standard_cal_info,
	.next = NULL,
};

const struct is_vender_rom_addr front_gc08a3_otp_cal_addr = {
	/* Set '-1' if not used */

	.camera_module_es_version                                  = 'A',
	.cal_map_es_version                                        = '1',
	.rom_max_cal_size                                          = IS_FRONT_MAX_CAL_SIZE,

	.rom_header_cal_data_start_addr                            = 0x00,
	.rom_header_main_module_info_start_addr                    = 0x0A,
	.rom_header_cal_map_ver_start_addr                         = 0x16,
	.rom_header_project_name_start_addr                        = 0x1E,
	.rom_header_module_id_addr                                 = 0x2E,
	.rom_header_main_sensor_id_addr                            = 0x38,

	.rom_header_sub_module_info_start_addr                     = -1,
	.rom_header_sub_sensor_id_addr                             = -1,

	.rom_header_main_header_start_addr                         = -1,
	.rom_header_main_header_end_addr                           = -1,
	.rom_header_main_oem_start_addr                            = -1,
	.rom_header_main_oem_end_addr                              = -1,
	.rom_header_main_awb_start_addr                            = -1,
	.rom_header_main_awb_end_addr                              = -1,
	.rom_header_main_shading_start_addr                        = -1,
	.rom_header_main_shading_end_addr                          = -1,
	.rom_header_main_sensor_cal_start_addr                     = -1,
	.rom_header_main_sensor_cal_end_addr                       = -1,
	.rom_header_dual_cal_start_addr                            = -1,
	.rom_header_dual_cal_end_addr                              = -1,
	.rom_header_pdaf_cal_start_addr                            = -1,
	.rom_header_pdaf_cal_end_addr                              = -1,

	.rom_header_sub_oem_start_addr                             = -1,
	.rom_header_sub_oem_end_addr                               = -1,
	.rom_header_sub_awb_start_addr                             = -1,
	.rom_header_sub_awb_end_addr                               = -1,
	.rom_header_sub_shading_start_addr                         = -1,
	.rom_header_sub_shading_end_addr                           = -1,

	.rom_header_main_mtf_data_addr                             = -1,
	.rom_header_sub_mtf_data_addr                              = -1,

	.rom_header_checksum_addr                                  = 0x4A,
	.rom_header_checksum_len                                   = GC08A3_FRONT_HEADER_CHECKSUM_LEN,

	.rom_oem_af_inf_position_addr                              = -1,
	.rom_oem_af_macro_position_addr                            = -1,
	.rom_oem_module_info_start_addr                            = -1,
	.rom_oem_checksum_addr                                     = -1,
	.rom_oem_checksum_len                                      = -1,

	.rom_awb_module_info_start_addr                            = -1,
	.rom_awb_checksum_addr                                     = -1,
	.rom_awb_checksum_len                                      = -1,

	.rom_shading_module_info_start_addr                        = -1,
	.rom_shading_checksum_addr                                 = -1,
	.rom_shading_checksum_len                                  = -1,

	.rom_sensor_cal_module_info_start_addr                     = -1,
	.rom_sensor_cal_checksum_addr                              = -1,
	.rom_sensor_cal_checksum_len                               = -1,

	.rom_dual_module_info_start_addr                           = -1,
	.rom_dual_checksum_addr                                    = -1,
	.rom_dual_checksum_len                                     = -1,

	.rom_pdaf_module_info_start_addr                           = -1,
	.rom_pdaf_checksum_addr                                    = -1,
	.rom_pdaf_checksum_len                                     = -1,

	.rom_sub_oem_af_inf_position_addr                          = -1,
	.rom_sub_oem_af_macro_position_addr                        = -1,
	.rom_sub_oem_module_info_start_addr                        = -1,
	.rom_sub_oem_checksum_addr                                 = -1,
	.rom_sub_oem_checksum_len                                  = -1,

	.rom_sub_awb_module_info_start_addr                        = -1,
	.rom_sub_awb_checksum_addr                                 = -1,
	.rom_sub_awb_checksum_len                                  = -1,

	.rom_sub_shading_module_info_start_addr                    = -1,
	.rom_sub_shading_checksum_addr                             = -1,
	.rom_sub_shading_checksum_len                              = -1,

	.rom_dual_cal_data2_start_addr                             = -1,
	.rom_dual_cal_data2_size                                   = -1,
	.rom_dual_tilt_x_addr                                      = -1,
	.rom_dual_tilt_y_addr                                      = -1,
	.rom_dual_tilt_z_addr                                      = -1,
	.rom_dual_tilt_sx_addr                                     = -1,
	.rom_dual_tilt_sy_addr                                     = -1,
	.rom_dual_tilt_range_addr                                  = -1,
	.rom_dual_tilt_max_err_addr                                = -1,
	.rom_dual_tilt_avg_err_addr                                = -1,
	.rom_dual_tilt_dll_version_addr                            = -1,
	.rom_dual_tilt_dll_model_id_addr                           = -1,
	.rom_dual_tilt_dll_model_id_size                           = -1,
	.rom_dual_shift_x_addr                                     = -1,
	.rom_dual_shift_y_addr                                     = -1,

	.extend_cal_addr                                           = &front_gc08a3_extend_cal_addr,
};

static const u32 sensor_otp_gc08a3_global[] = {
	0x031c,	0x60,	0x01,
	0x0337,	0x04,	0x01,
	0x0335,	0x51,	0x01,
	0x0336,	0x67,	0x01,
	0x0383,	0xbb,	0x01,
	0x031a,	0x00,	0x01,
	0x0321,	0x10,	0x01,
	0x0327,	0x05,	0x01,
	0x0325,	0x40,	0x01,
	0x0326,	0x36,	0x01,
	0x0314,	0x11,	0x01,
	0x0315,	0xd6,	0x01,
	0x0316,	0x01,	0x01,
	0x0334,	0x40,	0x01,
	0x0324,	0x42,	0x01,
	0x031c,	0x00,	0x01,
	0x031c,	0x9f,	0x01,
	0x039a,	0x13,	0x01,
	0x0084,	0x30,	0x01,
	0x02b3,	0x08,	0x01,
	0x0057,	0x0c,	0x01,
	0x05c3,	0x50,	0x01,
	0x0311,	0x90,	0x01,
	0x05a0,	0x02,	0x01,
	0x0074,	0x0a,	0x01,
	0x0059,	0x11,	0x01,
	0x0070,	0x05,	0x01,
	0x0101,	0x00,	0x01,
	0x0344,	0x00,	0x01,
	0x0345,	0x06,	0x01,
	0x0346,	0x00,	0x01,
	0x0347,	0x04,	0x01,
	0x0348,	0x0c,	0x01,
	0x0349,	0xd0,	0x01,
	0x034a,	0x09,	0x01,
	0x034b,	0x9c,	0x01,
	0x0202,	0x08,	0x01,
	0x0203,	0xf6,	0x01,
	0x0340,	0x09,	0x01,
	0x0341,	0xf4,	0x01,
	0x0342,	0x07,	0x01,
	0x0343,	0x2c,	0x01,
	0x0219,	0x05,	0x01,
	0x0226,	0x00,	0x01,
	0x0227,	0x28,	0x01,
	0x0e0a,	0x00,	0x01,
	0x0e0b,	0x00,	0x01,
	0x0e24,	0x04,	0x01,
	0x0e25,	0x04,	0x01,
	0x0e26,	0x00,	0x01,
	0x0e27,	0x10,	0x01,
	0x0e01,	0x74,	0x01,
	0x0e03,	0x47,	0x01,
	0x0e04,	0x33,	0x01,
	0x0e05,	0x44,	0x01,
	0x0e06,	0x44,	0x01,
	0x0e0c,	0x1e,	0x01,
	0x0e17,	0x3a,	0x01,
	0x0e18,	0x3c,	0x01,
	0x0e19,	0x40,	0x01,
	0x0e1a,	0x42,	0x01,
	0x0e28,	0x21,	0x01,
	0x0e2b,	0x68,	0x01,
	0x0e2c,	0x0d,	0x01,
	0x0e2d,	0x08,	0x01,
	0x0e34,	0xf4,	0x01,
	0x0e35,	0x44,	0x01,
	0x0e36,	0x07,	0x01,
	0x0e38,	0x49,	0x01,
	0x0210,	0x13,	0x01,
	0x0218,	0x00,	0x01,
	0x0241,	0x88,	0x01,
	0x0e32,	0x00,	0x01,
	0x0e33,	0x18,	0x01,
	0x0e42,	0x03,	0x01,
	0x0e43,	0x80,	0x01,
	0x0e44,	0x04,	0x01,
	0x0e45,	0x00,	0x01,
	0x0e4f,	0x04,	0x01,
	0x057a,	0x20,	0x01,
	0x0381,	0x7c,	0x01,
	0x0382,	0x9b,	0x01,
	0x0384,	0xfb,	0x01,
	0x0389,	0x38,	0x01,
	0x038a,	0x03,	0x01,
	0x0390,	0x6a,	0x01,
	0x0391,	0x0b,	0x01,
	0x0392,	0x60,	0x01,
	0x0393,	0xc1,	0x01,
	0x0396,	0xff,	0x01,
	0x0398,	0x62,	0x01,
	0x031c,	0x80,	0x01,
	0x03fe,	0x10,	0x01,
	0x03fe,	0x00,	0x01,
	0x031c,	0x9f,	0x01,
	0x03fe,	0x00,	0x01,
	0x03fe,	0x00,	0x01,
	0x03fe,	0x00,	0x01,
	0x03fe,	0x00,	0x01,
	0x031c,	0x80,	0x01,
	0x03fe,	0x10,	0x01,
	0x03fe,	0x00,	0x01,
	0x031c,	0x9f,	0x01,
	0x0360,	0x01,	0x01,
	0x0360,	0x00,	0x01,
	0x0316,	0x09,	0x01,
	0x0a67,	0x80,	0x01,
	0x0313,	0x00,	0x01,
	0x0a53,	0x0e,	0x01,
	0x0a65,	0x17,	0x01,
	0x0a68,	0xa1,	0x01,
	0x0a58,	0x00,	0x01,
	0x0ace,	0x0c,	0x01,
	0x00a4,	0x00,	0x01,
	0x00a5,	0x01,	0x01,
	0x00a7,	0x09,	0x01,
	0x00a8,	0x9c,	0x01,
	0x00a9,	0x0c,	0x01,
	0x00aa,	0xd0,	0x01,
	0x0a8a,	0x00,	0x01,
	0x0a8b,	0xe0,	0x01,
	0x0a8c,	0x13,	0x01,
	0x0a8d,	0xe8,	0x01,
	0x0a90,	0x0a,	0x01,
	0x0a91,	0x10,	0x01,
	0x0a92,	0xf8,	0x01,
	0x0a71,	0xf2,	0x01,
	0x0a72,	0x12,	0x01,
	0x0a73,	0x64,	0x01,
	0x0a75,	0x41,	0x01,
	0x0a70,	0x07,	0x01,
	0x0313,	0x80,	0x01,
	0x00a0,	0x01,	0x01,
	0x0080,	0xd2,	0x01,
	0x0081,	0x3f,	0x01,
	0x0087,	0x51,	0x01,
	0x0089,	0x03,	0x01,
	0x009b,	0x40,	0x01,
	0x05a0,	0x82,	0x01,
	0x05ac,	0x00,	0x01,
	0x05ad,	0x01,	0x01,
	0x05ae,	0x00,	0x01,
	0x0800,	0x0a,	0x01,
	0x0801,	0x14,	0x01,
	0x0802,	0x28,	0x01,
	0x0803,	0x34,	0x01,
	0x0804,	0x0e,	0x01,
	0x0805,	0x33,	0x01,
	0x0806,	0x03,	0x01,
	0x0807,	0x8a,	0x01,
	0x0808,	0x50,	0x01,
	0x0809,	0x00,	0x01,
	0x080a,	0x34,	0x01,
	0x080b,	0x03,	0x01,
	0x080c,	0x26,	0x01,
	0x080d,	0x03,	0x01,
	0x080e,	0x18,	0x01,
	0x080f,	0x03,	0x01,
	0x0810,	0x10,	0x01,
	0x0811,	0x03,	0x01,
	0x0812,	0x00,	0x01,
	0x0813,	0x00,	0x01,
	0x0814,	0x01,	0x01,
	0x0815,	0x00,	0x01,
	0x0816,	0x01,	0x01,
	0x0817,	0x00,	0x01,
	0x0818,	0x00,	0x01,
	0x0819,	0x0a,	0x01,
	0x081a,	0x01,	0x01,
	0x081b,	0x6c,	0x01,
	0x081c,	0x00,	0x01,
	0x081d,	0x0b,	0x01,
	0x081e,	0x02,	0x01,
	0x081f,	0x00,	0x01,
	0x0820,	0x00,	0x01,
	0x0821,	0x0c,	0x01,
	0x0822,	0x02,	0x01,
	0x0823,	0xd9,	0x01,
	0x0824,	0x00,	0x01,
	0x0825,	0x0d,	0x01,
	0x0826,	0x03,	0x01,
	0x0827,	0xf0,	0x01,
	0x0828,	0x00,	0x01,
	0x0829,	0x0e,	0x01,
	0x082a,	0x05,	0x01,
	0x082b,	0x94,	0x01,
	0x082c,	0x09,	0x01,
	0x082d,	0x6e,	0x01,
	0x082e,	0x07,	0x01,
	0x082f,	0xe6,	0x01,
	0x0830,	0x10,	0x01,
	0x0831,	0x0e,	0x01,
	0x0832,	0x0b,	0x01,
	0x0833,	0x2c,	0x01,
	0x0834,	0x14,	0x01,
	0x0835,	0xae,	0x01,
	0x0836,	0x0f,	0x01,
	0x0837,	0xc4,	0x01,
	0x0838,	0x18,	0x01,
	0x0839,	0x0e,	0x01,
	0x05ac,	0x01,	0x01,
	0x059a,	0x00,	0x01,
	0x059b,	0x00,	0x01,
	0x059c,	0x01,	0x01,
	0x0598,	0x00,	0x01,
	0x0597,	0x14,	0x01,
	0x05ab,	0x09,	0x01,
	0x05a4,	0x02,	0x01,
	0x05a3,	0x05,	0x01,
	0x05a0,	0xc2,	0x01,
	0x0207,	0xc4,	0x01,
	0x0208,	0x01,	0x01,
	0x0209,	0x72,	0x01,
	0x0204,	0x04,	0x01,
	0x0205,	0x00,	0x01,
	0x0040,	0x22,	0x01,
	0x0041,	0x20,	0x01,
	0x0043,	0x10,	0x01,
	0x0044,	0x00,	0x01,
	0x0046,	0x08,	0x01,
	0x0047,	0xf0,	0x01,
	0x0048,	0x0f,	0x01,
	0x004b,	0x0f,	0x01,
	0x004c,	0x00,	0x01,
	0x0050,	0x5c,	0x01,
	0x0051,	0x44,	0x01,
	0x005b,	0x03,	0x01,
	0x00c0,	0x00,	0x01,
	0x00c1,	0x80,	0x01,
	0x00c2,	0x31,	0x01,
	0x00c3,	0x00,	0x01,
	0x0460,	0x04,	0x01,
	0x0462,	0x08,	0x01,
	0x0464,	0x0e,	0x01,
	0x0466,	0x0a,	0x01,
	0x0468,	0x12,	0x01,
	0x046a,	0x12,	0x01,
	0x046c,	0x10,	0x01,
	0x046e,	0x0c,	0x01,
	0x0461,	0x03,	0x01,
	0x0463,	0x03,	0x01,
	0x0465,	0x03,	0x01,
	0x0467,	0x03,	0x01,
	0x0469,	0x04,	0x01,
	0x046b,	0x04,	0x01,
	0x046d,	0x04,	0x01,
	0x046f,	0x04,	0x01,
	0x0470,	0x04,	0x01,
	0x0472,	0x10,	0x01,
	0x0474,	0x26,	0x01,
	0x0476,	0x38,	0x01,
	0x0478,	0x20,	0x01,
	0x047a,	0x30,	0x01,
	0x047c,	0x38,	0x01,
	0x047e,	0x60,	0x01,
	0x0471,	0x05,	0x01,
	0x0473,	0x05,	0x01,
	0x0475,	0x05,	0x01,
	0x0477,	0x05,	0x01,
	0x0479,	0x04,	0x01,
	0x047b,	0x04,	0x01,
	0x047d,	0x04,	0x01,
	0x047f,	0x04,	0x01,
	0x0100,	0x00,	0x01,
};

static const u32 sensor_otp_gc08a3_initial[] = {
	0x0324,	0x44,	0x01,
	0x0316,	0x09,	0x01,
	0x0A67,	0x80,	0x01,
	0x0313,	0x00,	0x01,
	0x0A53,	0x0E,	0x01,
	0x0A65,	0x17,	0x01,
	0x0A68,	0x01,	0x01,
	0x0A47,	0x00,	0x01,
	0x0A58,	0x00,	0x01,
	0x0ACE,	0x0C,	0x01,
};

static const u32 sensor_otp_gc08a3_global_size = ARRAY_SIZE(sensor_otp_gc08a3_global);
static const u32 sensor_otp_gc08a3_initial_size = ARRAY_SIZE(sensor_otp_gc08a3_initial);

#endif /* IS_OTPROM_FRONT_GC08A3_V001_H */
